package com.steria.geodashboard.brms.geodashboard_ams_rules.rule;

import com.steria.geodashboard.brms.common.model.ConfigCloseToZeroLevelDuration;
import com.steria.geodashboard.brms.common.model.TagAlert;
import com.steria.geodashboard.brms.common.model.TagCloseToZeroLevelDuration;

// 1. Condition to raise alert: (lowerThld check) && (upperThld check)
// 2. value is compulsory 
// 3. Empty lowerThld/upperThld implies no threshold for lower/upper bound applied
// 4. For alertStatus, 0=no alert, 1=alert

rule "Check Close To Zero Level Duration Threshold - Intermediate"
	ruleflow-group "Check_Threshold"
	dialect "mvel"
	when
		$alert : TagAlert(durationIntermediateAlert == false)
		$tag : TagCloseToZeroLevelDuration(this == $alert.tag, value != null)
		$config : ConfigCloseToZeroLevelDuration(this == $alert.config, startTime != null, endTime != null, lowerThld != null, upperThld != null
			, $tag.currentDate.before(endTime)
			, $tag.currentDate.equals(startTime) || $tag.currentDate.after(startTime)
			, (lowerThld <= $tag.value && upperThld >= $tag.value ))
	then
		$alert.setDurationIntermediateAlert(true);
		printTagAlert("Check_Threshold", "Check Close To Zero Level Duration Threshold - Intermediate", $alert, logger);
		update($alert);
end

rule "Check Close To Zero Level Duration Threshold - Final"
	ruleflow-group "Check_Threshold"
	dialect "mvel"
	when
		$alert : TagAlert(durationIntermediateAlert == true, hasFulfillFinalAlert == false)
		$tag : TagCloseToZeroLevelDuration(this == $alert.tag, value != null)
		$config : ConfigCloseToZeroLevelDuration(this == $alert.config, startTime != null, endTime != null, lowerThld != null, upperThld != null
			, $tag.currentDate.before(endTime)
			, $tag.currentDate.equals(startTime) || $tag.currentDate.after(startTime)
			, (lowerThld <= $tag.value && upperThld >= $tag.value )
			, levelPriority != null
			, alertDelayDurationPeriod == null || 
				($tag.alertStartDate != null && $tag.currentDate.after(getDateAfterDuration($tag.alertStartDate, alertDelayDurationPeriod)) == true))
	then
		$alert.setHasFulfillFinalAlert(true);
		$alert.setFinalAlert(true);
		$alert.setAlertStatus(1);
		printTagAlert("Check_Threshold", "Check Close To Zero Level Duration Threshold - Final", $alert, logger);
		update($alert);
end

rule "Check All Close To Zero Level Duration Threshold - True Alert"
	ruleflow-group "Check_Threshold"
	dialect "mvel"
	when
		$alert : TagAlert(finalAlert == true, hasFulfillFinalAlert == true)
		$config : ConfigCloseToZeroLevelDuration(levelPriority != null) from $alert.config
		//$config : ConfigRangeLevelDuration (this==$alert.config)
		$higherAlert : TagAlert(finalAlert == true, hasFulfillFinalAlert == true, alertStatus == $alert.alertStatus)
		//$higherConfig : ConfigRangeLevelDuration(this==$higherAlert.config, levelPriority > $config.levelPriority)
		$higherConfig : ConfigCloseToZeroLevelDuration(levelPriority!=null && > $config.levelPriority) from $higherAlert.config		
	then
		$alert.setFinalAlert(false);
		printTagAlert("Check_Threshold", "Check All Close To Zero Level Duration Threshold - True Alert", $alert, logger);
		printConfig("Check_Threshold", "Check All Close To Zero Level Duration Threshold - True Alert",$config,logger)
		update($alert);
end
